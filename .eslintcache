[{"E:\\MailBox-Help-ReDesigned\\src\\index.js":"1","E:\\MailBox-Help-ReDesigned\\src\\App.js":"2","E:\\MailBox-Help-ReDesigned\\src\\components\\Auth\\Login.js":"3","E:\\MailBox-Help-ReDesigned\\src\\components\\Auth\\Signup.js":"4","E:\\MailBox-Help-ReDesigned\\src\\components\\Home\\Home.js":"5","E:\\MailBox-Help-ReDesigned\\src\\trimEmail.js":"6","E:\\MailBox-Help-ReDesigned\\src\\store\\reduxStore.js":"7","E:\\MailBox-Help-ReDesigned\\src\\store\\mailSlice.js":"8","E:\\MailBox-Help-ReDesigned\\src\\components\\Inbox\\Inbox.js":"9","E:\\MailBox-Help-ReDesigned\\src\\components\\Mail\\Mail.js":"10","E:\\MailBox-Help-ReDesigned\\src\\components\\Layout\\Header.js":"11","E:\\MailBox-Help-ReDesigned\\src\\components\\Layout\\Sidebar.js":"12","E:\\MailBox-Help-ReDesigned\\src\\components\\MailPage\\MailPage.js":"13","E:\\MailBox-Help-ReDesigned\\src\\components\\Sent\\Sent.js":"14","E:\\MailBox-Help-ReDesigned\\src\\components\\Sent\\SentList.js":"15","E:\\MailBox-Help-ReDesigned\\src\\components\\Sent\\ViewSent.js":"16"},{"size":322,"mtime":1667373737818,"results":"17","hashOfConfig":"18"},{"size":1412,"mtime":1667395228119,"results":"19","hashOfConfig":"18"},{"size":2066,"mtime":1667397373288,"results":"20","hashOfConfig":"18"},{"size":2556,"mtime":1667372724631,"results":"21","hashOfConfig":"18"},{"size":3587,"mtime":1667392037558,"results":"22","hashOfConfig":"18"},{"size":313,"mtime":1667373439098,"results":"23","hashOfConfig":"18"},{"size":206,"mtime":1667373654354,"results":"24","hashOfConfig":"18"},{"size":1518,"mtime":1667373588975,"results":"25","hashOfConfig":"18"},{"size":2455,"mtime":1667393706518,"results":"26","hashOfConfig":"18"},{"size":2210,"mtime":1667393656000,"results":"27","hashOfConfig":"18"},{"size":776,"mtime":1667380609839,"results":"28","hashOfConfig":"18"},{"size":2568,"mtime":1667397442964,"results":"29","hashOfConfig":"18"},{"size":2965,"mtime":1667391864874,"results":"30","hashOfConfig":"18"},{"size":1712,"mtime":1667394555755,"results":"31","hashOfConfig":"18"},{"size":935,"mtime":1667395047606,"results":"32","hashOfConfig":"18"},{"size":2873,"mtime":1667396761077,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"bm5aqf",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\MailBox-Help-ReDesigned\\src\\index.js",[],["71","72"],"E:\\MailBox-Help-ReDesigned\\src\\App.js",[],"E:\\MailBox-Help-ReDesigned\\src\\components\\Auth\\Login.js",[],"E:\\MailBox-Help-ReDesigned\\src\\components\\Auth\\Signup.js",[],"E:\\MailBox-Help-ReDesigned\\src\\components\\Home\\Home.js",[],"E:\\MailBox-Help-ReDesigned\\src\\trimEmail.js",[],"E:\\MailBox-Help-ReDesigned\\src\\store\\reduxStore.js",[],"E:\\MailBox-Help-ReDesigned\\src\\store\\mailSlice.js",[],"E:\\MailBox-Help-ReDesigned\\src\\components\\Inbox\\Inbox.js",["73","74"],"import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { mailActions } from '../../store/mailSlice';\r\nimport { getUsername } from '../../trimEmail';\r\nimport Mail from '../Mail/Mail';\r\nimport inbox from './Inbox.module.css';\r\n\r\nconst Inbox = () => {\r\n    const [inboxMail, setInboxMail] = useState([]);\r\n    const user = localStorage.getItem(\"email\");\r\n    const username = getUsername(user);\r\n    const dispatch = useDispatch();\r\n    const totalNotOpened = useSelector(state => state.mail.totalNotOpened);\r\n\r\n    useEffect(() => {\r\n        console.log(\"called\");\r\n        const setIntervalId = setInterval(() => {\r\n            let mails = [];\r\n            fetch(`https://react-project-dbase-default-rtdb.asia-southeast1.firebasedatabase.app/${username}/receiver.json`).then((res) => {\r\n                return res.json();\r\n            }).then((data) => {\r\n                let notOpened = 0;\r\n                for (let [key, value] of Object.entries(data)) {\r\n                    mails.push({ key, ...value });\r\n                    if (value.isOpen === false) {\r\n                        notOpened += 1;\r\n                    }\r\n                }\r\n                \r\n                setInboxMail(mails);\r\n                dispatch(mailActions.countNotOpened(notOpened));\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        }, 2000);\r\n        return () => clearInterval(setIntervalId);\r\n    }, [dispatch]);\r\n    const deleteHandler = (key) => {\r\n        fetch(`https://react-project-dbase-default-rtdb.asia-southeast1.firebasedatabase.app/${username}/receiver/${key}.json`, {\r\n            method: \"DELETE\",\r\n        }).then((res) => {\r\n            const inboxMailCopy = [...inboxMail]\r\n            const index = inboxMailCopy.findIndex((item) => item.key === key);\r\n            inboxMailCopy.splice(index, 1)\r\n            setInboxMail(inboxMailCopy);\r\n        })\r\n    }\r\n    return <>\r\n        <div className={inbox.container}>\r\n            <h2>Mails</h2>\r\n            <ul>\r\n                {inboxMail.length === 0 && <h3 style={{textAlign: \"center\"}}>Please wait...</h3>}\r\n                {\r\n                    inboxMail.map((mail) => {\r\n                        return <Mail key={mail.key} deleteItem={deleteHandler} mail={mail} isSentBox={false} />\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Inbox;","E:\\MailBox-Help-ReDesigned\\src\\components\\Mail\\Mail.js",[],"E:\\MailBox-Help-ReDesigned\\src\\components\\Layout\\Header.js",[],"E:\\MailBox-Help-ReDesigned\\src\\components\\Layout\\Sidebar.js",[],"E:\\MailBox-Help-ReDesigned\\src\\components\\MailPage\\MailPage.js",["75"],"import { useNavigate, useParams } from 'react-router-dom';\r\nimport view from './MailPage.module.css';\r\nimport { BiArrowBack, BiTrash, BiArchiveIn } from \"react-icons/bi\";\r\nimport { GoReport } from \"react-icons/go\";\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUsername } from '../../trimEmail';\r\nimport { useEffect } from 'react';\r\nimport { mailActions } from '../../store/mailSlice';\r\n\r\nconst MailPage = (props) => {\r\n    const user = localStorage.getItem(\"email\");\r\n    const username = getUsername(user);\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n    const mail = useSelector(state => state.mail.mail);\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n            fetch(`https://react-project-dbase-default-rtdb.asia-southeast1.firebasedatabase.app/${username}/receiver.json`).then((res) => {\r\n                return res.json();\r\n            }).then((data) => {\r\n                let inboxMails = [];\r\n                for (let [key, value] of Object.entries(data)) {\r\n                    inboxMails.push({ key, ...value });\r\n                }\r\n                const selectedMail = inboxMails.find((i) => i.key === params.id);\r\n                console.log(selectedMail)\r\n                dispatch(mailActions.replaceMail(selectedMail));\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }, []);\r\n\r\n\r\n    console.log(mail)\r\n\r\n    const backButtonHandler = () => {\r\n        navigate('/inbox');\r\n    }\r\n\r\n    const archiveButtonHandler = () => {\r\n        alert('Message archived')\r\n    }\r\n\r\n    const reportButtonHandler = () => {\r\n        alert('Email has reported as spam')\r\n    }\r\n\r\n    const deleteButtonHandler = () => {\r\n        alert('mail deleted')\r\n    }\r\n\r\n    return <>\r\n        <div className={view.container}>\r\n            <div className={view.content}>\r\n                <header>\r\n                    <span onClick={backButtonHandler}><BiArrowBack /></span>\r\n                    <span onClick={archiveButtonHandler}><BiArchiveIn /></span>\r\n                    <span onClick={reportButtonHandler}><GoReport /></span>\r\n                    <span onClick={deleteButtonHandler}><BiTrash /></span>\r\n                </header>\r\n                   \r\n                    <li key={mail.key}>\r\n                        <span className={view.profile}>\r\n                            <img src=\"https://lh3.googleusercontent.com/a/default-user=s40-p\" alt='profile' />\r\n                            <h6>{mail.sender}</h6>\r\n                            <h5>{mail.sender}</h5>\r\n                        </span>\r\n                        <h3>{mail.subject}</h3>\r\n                        <div className={view.message}>\r\n                            <span>{ReactHtmlParser(mail.message)}</span>\r\n                        </div>\r\n                    </li>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default MailPage;","E:\\MailBox-Help-ReDesigned\\src\\components\\Sent\\Sent.js",["76","77"],"import sentbox from './Sent.module.css';\r\nimport SentList from './SentList';\r\nimport { useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { getUsername } from '../../trimEmail';\r\n\r\nconst Sent = () => {\r\n    const [inboxMail, setInboxMail] = useState([]);\r\n    const user = localStorage.getItem(\"email\");\r\n    const username = getUsername(user);\r\n    useEffect(() => {\r\n        let mails = [];\r\n        fetch(`https://react-project-dbase-default-rtdb.asia-southeast1.firebasedatabase.app/${username}/sent.json`).then((res) => {\r\n            return res.json();\r\n        }).then((data) => {\r\n            for (let [key, value] of Object.entries(data)) {\r\n                mails.push({ key, ...value });\r\n            }\r\n            setInboxMail(mails);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n        console.log(\"getting called\");\r\n    }, []);\r\n    const deleteHandler = (key) => {\r\n        fetch(`https://react-project-dbase-default-rtdb.asia-southeast1.firebasedatabase.app/${username}/sent/${key}.json`, {\r\n            method: \"DELETE\",\r\n        }).then((res) => {\r\n            const inboxMailCopy = [...inboxMail]\r\n            const index = inboxMailCopy.findIndex((item) => item.key === key);\r\n            inboxMailCopy.splice(index, 1)\r\n            setInboxMail(inboxMailCopy);\r\n        })\r\n    }\r\n\r\n    return <>\r\n        <div className={sentbox.container}>\r\n                <ul>\r\n                {inboxMail.map((mail) => {\r\n                        return <SentList key={mail.key} mail={mail} deleteItem={deleteHandler} isSentBox={true} />\r\n                    })}\r\n                </ul>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Sent;","E:\\MailBox-Help-ReDesigned\\src\\components\\Sent\\SentList.js",["78","79"],"import { Link, NavLink } from 'react-router-dom';\r\nimport sentlist from './SentList.module.css';\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst SentList = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteHandler = () => {\r\n        props.deleteItem(props.mail.key);\r\n    }\r\n    \r\n\r\n    \r\n \r\n    return <>\r\n        <li className={sentlist.item}>\r\n            <div className={sentlist.card}>\r\n                <h3>{props.mail.receiver}</h3>\r\n                <div className={sentlist.price}>{props.mail.subject}</div>\r\n                <NavLink state={props.mail} to={`/sent/${props.mail.key}`} style={{ color: 'inherit', textDecoration: 'inherit' }}>\r\n                    <p>click to view message</p>\r\n                </NavLink>\r\n                <p onClick={deleteHandler}><AiFillDelete /></p>\r\n            </div>\r\n        </li>\r\n    </>\r\n}\r\n\r\nexport default SentList","E:\\MailBox-Help-ReDesigned\\src\\components\\Sent\\ViewSent.js",["80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":13,"column":11,"nodeType":"87","messageId":"88","endLine":13,"endColumn":25},{"ruleId":"89","severity":1,"message":"90","line":37,"column":8,"nodeType":"91","endLine":37,"endColumn":18,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":33,"column":8,"nodeType":"91","endLine":33,"endColumn":10,"suggestions":"94"},{"ruleId":"85","severity":1,"message":"95","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":24,"column":8,"nodeType":"91","endLine":24,"endColumn":10,"suggestions":"96"},{"ruleId":"85","severity":1,"message":"97","line":1,"column":10,"nodeType":"87","messageId":"88","endLine":1,"endColumn":14},{"ruleId":"85","severity":1,"message":"98","line":7,"column":11,"nodeType":"87","messageId":"88","endLine":7,"endColumn":19},{"ruleId":"89","severity":1,"message":"93","line":32,"column":8,"nodeType":"91","endLine":32,"endColumn":10,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'totalNotOpened' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has missing dependencies: 'dispatch', 'params.id', and 'username'. Either include them or remove the dependency array.",["103"],"'useSelector' is defined but never used.",["104"],"'Link' is defined but never used.","'dispatch' is assigned a value but never used.",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"108","fix":"112"},"Update the dependencies array to be: [dispatch, username]",{"range":"113","text":"114"},"Update the dependencies array to be: [dispatch, params.id, username]",{"range":"115","text":"116"},"Update the dependencies array to be: [username]",{"range":"117","text":"118"},{"range":"119","text":"116"},[1483,1493],"[dispatch, username]",[1445,1447],"[dispatch, params.id, username]",[905,907],"[username]",[1350,1352]]